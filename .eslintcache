[{"/media/D/Projects/agentium/src/index.tsx":"1","/media/D/Projects/agentium/src/app.tsx":"2","/media/D/Projects/agentium/src/background/background-view.tsx":"3","/media/D/Projects/agentium/src/options/options-view.tsx":"4","/media/D/Projects/agentium/src/popup/popup-view.tsx":"5","/media/D/Projects/agentium/src/background/browser-action-manager.ts":"6","/media/D/Projects/agentium/src/background/context-menu-manager.ts":"7","/media/D/Projects/agentium/src/background/ua-header-manager.ts":"8","/media/D/Projects/agentium/src/options/about-card.tsx":"9","/media/D/Projects/agentium/src/options/edit-ua-list-card.tsx":"10","/media/D/Projects/agentium/src/popup/toggle-enabled-card.tsx":"11","/media/D/Projects/agentium/src/popup/ua-list-card.tsx":"12","/media/D/Projects/agentium/src/state/state.ts":"13","/media/D/Projects/agentium/src/lib/open-options-page.ts":"14","/media/D/Projects/agentium/src/lib/card-title.tsx":"15","/media/D/Projects/agentium/src/lib/device-type-icon.tsx":"16","/media/D/Projects/agentium/src/state/browser-storage.ts":"17","/media/D/Projects/agentium/src/state/default-ua-spec-list.ts":"18"},{"size":171,"mtime":1541135438861,"results":"19","hashOfConfig":"20"},{"size":892,"mtime":1607060201146,"results":"21","hashOfConfig":"20"},{"size":687,"mtime":1541139600466,"results":"22","hashOfConfig":"20"},{"size":1910,"mtime":1607062137892,"results":"23","hashOfConfig":"20"},{"size":819,"mtime":1607061822973,"results":"24","hashOfConfig":"20"},{"size":718,"mtime":1541143755786,"results":"25","hashOfConfig":"20"},{"size":2362,"mtime":1541202680569,"results":"26","hashOfConfig":"20"},{"size":798,"mtime":1541138948817,"results":"27","hashOfConfig":"20"},{"size":2347,"mtime":1607062492581,"results":"28","hashOfConfig":"20"},{"size":9359,"mtime":1607064535209,"results":"29","hashOfConfig":"20"},{"size":2106,"mtime":1607061706007,"results":"30","hashOfConfig":"20"},{"size":1953,"mtime":1541186751050,"results":"31","hashOfConfig":"20"},{"size":5145,"mtime":1607064668685,"results":"32","hashOfConfig":"20"},{"size":460,"mtime":1607064366272,"results":"33","hashOfConfig":"20"},{"size":557,"mtime":1607062095056,"results":"34","hashOfConfig":"20"},{"size":697,"mtime":1541137225794,"results":"35","hashOfConfig":"20"},{"size":2369,"mtime":1607064630319,"results":"36","hashOfConfig":"20"},{"size":1988,"mtime":1541234945181,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"173o91f",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"/media/D/Projects/agentium/src/index.tsx",[],["84","85"],"/media/D/Projects/agentium/src/app.tsx",[],"/media/D/Projects/agentium/src/background/background-view.tsx",[],"/media/D/Projects/agentium/src/options/options-view.tsx",[],"/media/D/Projects/agentium/src/popup/popup-view.tsx",[],"/media/D/Projects/agentium/src/background/browser-action-manager.ts",[],"/media/D/Projects/agentium/src/background/context-menu-manager.ts",["86"],"import {reaction, toJS} from 'mobx';\nimport openOptionsPage from 'src/lib/open-options-page';\nimport State from 'src/state/state';\nimport {browser, Menus} from 'webextension-polyfill-ts';\n\nconst TOGGLE_ENABLED = 'toggle-enabled';\nconst UA_SPEC_LIST = 'ua-spec-list';\nconst UA_SPEC_PREFIX = 'ua-spec-';\nconst OPTIONS = 'options';\n\nclass ContextMenuManager {\n  public start() {\n    browser.contextMenus.onClicked.addListener(this.onMenuClick.bind(this));\n    reaction(\n      () => [State.isEnabled, State.selectedUaSpec, toJS(State.uaSpecList)],\n      this.onStateChange.bind(this)\n    );\n  }\n\n  onMenuClick(onClickData: Menus.OnClickData) {\n    let menuItemId = onClickData.menuItemId.toString();\n    switch (menuItemId) {\n      case TOGGLE_ENABLED:\n        this.onToggleEnabled();\n        break;\n      case OPTIONS:\n        openOptionsPage();\n        break;\n      default:\n        if (menuItemId.startsWith(UA_SPEC_PREFIX)) {\n          this.onSelectUaSpec(\n            parseInt(menuItemId.substr(UA_SPEC_PREFIX.length))\n          );\n        }\n        break;\n    }\n  }\n\n  onToggleEnabled() {\n    State.toggleEnabled();\n  }\n\n  onSelectUaSpec(idx: number) {\n    State.setSelectedUaSpecIdx(idx);\n  }\n\n  onStateChange() {\n    browser.contextMenus.removeAll();\n    if (State.selectedUaSpec != null && State.uaSpecList.length > 0) {\n      browser.contextMenus.create({\n        contexts: ['browser_action'],\n        id: TOGGLE_ENABLED,\n        title: State.isEnabled\n          ? 'Turn OFF - Use default user agent'\n          : `Turn ON - ${State.selectedUaSpec.name}`,\n      });\n    }\n    browser.contextMenus.create({\n      contexts: ['browser_action'],\n      id: UA_SPEC_LIST,\n      title: 'Choose user agent',\n    });\n    State.uaSpecList.forEach((uaSpec, idx) => {\n      browser.contextMenus.create({\n        contexts: ['browser_action'],\n        type: 'radio',\n        checked: idx == State.selectedUaSpecIdx,\n        id: `${UA_SPEC_PREFIX}${idx}`,\n        title: uaSpec.name,\n        parentId: UA_SPEC_LIST,\n      });\n    });\n    browser.contextMenus.create({\n      contexts: ['browser_action'],\n      type: 'separator',\n      parentId: UA_SPEC_LIST,\n    });\n    browser.contextMenus.create({\n      contexts: ['browser_action'],\n      id: OPTIONS,\n      title: 'Edit user agents...',\n      parentId: UA_SPEC_LIST,\n    });\n  }\n}\n\nexport default ContextMenuManager;\n","/media/D/Projects/agentium/src/background/ua-header-manager.ts",["87"],"import State from 'src/state/state';\nimport {browser, WebRequest} from 'webextension-polyfill-ts';\n\nclass UaHeaderManager {\n  public start() {\n    browser.webRequest.onBeforeSendHeaders.addListener(\n      this.onBeforeSendHeaders.bind(this),\n      {urls: ['http://*/*', 'https://*/*']},\n      ['blocking', 'requestHeaders']\n    );\n  }\n\n  onBeforeSendHeaders(details: WebRequest.OnBeforeSendHeadersDetailsType) {\n    if (!State.isEnabledAndHasValidUaSpec() || details.requestHeaders == null) {\n      return {};\n    }\n    return {\n      requestHeaders: details.requestHeaders.map(\n        (header) =>\n          header.name.toLowerCase() == 'user-agent'\n            ? {name: 'User-Agent', value: State.selectedUaSpec!.value}\n            : header\n      ),\n    };\n  }\n}\n\nexport default UaHeaderManager;\n","/media/D/Projects/agentium/src/options/about-card.tsx",["88","89","90"],"import Avatar from '@material-ui/core/Avatar';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport * as React from 'react';\nimport CardTitle from 'src/lib/card-title';\nimport {browser} from 'webextension-polyfill-ts';\nimport './about-card.css';\n\nclass AboutCard extends React.Component<{}, {}> {\n  render() {\n    let manifest = browser.runtime.getManifest();\n    return (\n      <Paper>\n        <CardTitle text=\"About\" />\n        <CardHeader\n          avatar={<Avatar src=\"/icon-128.png\" classes={{root: 'about-icon'}} />}\n          title={manifest.name}\n          subheader={manifest.version}\n        />\n        <Divider />\n        <CardContent>\n          <Typography gutterBottom={true} variant=\"subtitle2\">\n            Source code\n          </Typography>\n          <Typography gutterBottom={true}>\n            Agentium is open-source software distributed under the Apache 2.0\n            License.\n          </Typography>\n          <Typography gutterBottom={true}>\n            Please feel free to fork &amp; contribute at{' '}\n            <a href=\"https://github.com/jichu4n/agentium\" target=\"_blank\">\n              github.com/jichu4n/agentium\n            </a>\n            .\n          </Typography>\n          <Typography>&nbsp;</Typography>\n\n          <Typography gutterBottom={true} variant=\"subtitle2\">\n            Author\n          </Typography>\n          <Typography gutterBottom={true}>\n            Agentium is developed by Chuan Ji. Find me on:\n            <ul>\n              <li>\n                Personal website:{' '}\n                <a href=\"https://jichu4n.com\" target=\"_blank\">\n                  jichu4n.com\n                </a>\n              </li>\n              <li>\n                GitHub:{' '}\n                <a href=\"https://github.com/jichu4n\" target=\"_blank\">\n                  github.com/jichu4n\n                </a>\n              </li>\n            </ul>\n          </Typography>\n          <Typography>&nbsp;</Typography>\n\n          <Typography>\n            Copyright &copy; 2018 Chuan Ji. All rights reserved.\n          </Typography>\n        </CardContent>\n      </Paper>\n    );\n  }\n}\n\nexport default AboutCard;\n","/media/D/Projects/agentium/src/options/edit-ua-list-card.tsx",["91","92"],"import Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Delete from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\nimport * as _ from 'lodash';\nimport {observer} from 'mobx-react';\nimport * as React from 'react';\nimport CardTitle from 'src/lib/card-title';\nimport DeviceTypeIcon from 'src/lib/device-type-icon';\nimport UaSpec from 'src/lib/ua-spec';\nimport State from 'src/state/state';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './edit-ua-list-card.css';\n\ninterface EditUaListCardState {\n  activeUaSpecIdx: number;\n  isDeleteConfirmationDialogOpen: boolean;\n  isResetConfirmationDialogOpen: boolean;\n  isEditDialogOpen: boolean;\n  editedUaSpec: UaSpec | null;\n}\n\nconst NEW_UA_SPEC: UaSpec = {\n  deviceType: 'desktop',\n  name: '',\n  value: '',\n};\n\n@observer\nclass EditUaListCard extends React.Component<{}, EditUaListCardState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      activeUaSpecIdx: -1,\n      isDeleteConfirmationDialogOpen: false,\n      isResetConfirmationDialogOpen: false,\n      isEditDialogOpen: false,\n      editedUaSpec: null,\n    };\n  }\n\n  render() {\n    let activeUaSpec = this.hasActiveUaSpec()\n      ? State.uaSpecList[this.state.activeUaSpecIdx]\n      : null;\n    return (\n      <Paper>\n        <CardTitle text=\"User agents\" />\n        <List>\n          {State.uaSpecList.map((uaSpec, idx) => (\n            <ListItem>\n              <ListItemIcon>\n                <DeviceTypeIcon deviceType={uaSpec.deviceType} />\n              </ListItemIcon>\n              <ListItemText primary={uaSpec.name} secondary={uaSpec.value} />\n              <IconButton onClick={() => this.onEdit(idx)}>\n                <Edit />\n              </IconButton>\n              <IconButton onClick={() => this.onDelete(idx)}>\n                <Delete />\n              </IconButton>\n              <IconButton onClick={() => this.onMoveUp(idx)}>\n                <ArrowUpward />\n              </IconButton>\n              <IconButton onClick={() => this.onMoveDown(idx)}>\n                <ArrowDownward />\n              </IconButton>\n            </ListItem>\n          ))}\n        </List>\n        <CardActions>\n          <Button color=\"primary\" onClick={() => this.onAdd()}>\n            Add user agent\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => this.onReset()}\n            disabled={State.isUaSpecListSameAsDefault()}\n          >\n            Reset to default\n          </Button>\n        </CardActions>\n\n        <Dialog open={this.state.isEditDialogOpen}>\n          <DialogTitle>\n            {this.hasActiveUaSpec() ? 'Edit user agent' : 'Add user agent'}\n          </DialogTitle>\n          {this.state.editedUaSpec && (\n            <DialogContent>\n              <TextField\n                fullWidth={true}\n                autoFocus={true}\n                margin=\"normal\"\n                label=\"Name\"\n                placeholder=\"e.g. Google Chrome (Android)\"\n                value={this.state.editedUaSpec.name}\n                onChange={this.onEditFieldChange.bind(this, 'name')}\n              />\n              <TextField\n                fullWidth={true}\n                margin=\"normal\"\n                multiline={true}\n                rows={5}\n                label=\"User agent string\"\n                placeholder=\"e.g. Mozilla/5.0 (Linux; Android 8.0.0; SM-G9600) ...\"\n                value={this.state.editedUaSpec.value}\n                onChange={this.onEditFieldChange.bind(this, 'value')}\n              />\n              <TextField\n                select={true}\n                margin=\"normal\"\n                label=\"Form factor\"\n                value={this.state.editedUaSpec.deviceType}\n                onChange={this.onEditFieldChange.bind(this, 'deviceType')}\n                classes={{root: 'select-field'}}\n              >\n                <MenuItem key=\"desktop\" value=\"desktop\">\n                  Desktop\n                </MenuItem>\n                <MenuItem key=\"mobile\" value=\"mobile\">\n                  Phone\n                </MenuItem>\n                <MenuItem key=\"tablet\" value=\"tablet\">\n                  Tablet\n                </MenuItem>\n              </TextField>\n            </DialogContent>\n          )}\n          <DialogActions>\n            <Button color=\"primary\" onClick={() => this.onCancelEdit()}>\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={() => this.onConfirmEdit()}\n              disabled={\n                this.state.editedUaSpec == null ||\n                this.state.editedUaSpec.name.trim().length == 0 ||\n                this.state.editedUaSpec.value.trim().length == 0 ||\n                (this.hasActiveUaSpec() &&\n                  _.isEqual(\n                    this.state.editedUaSpec,\n                    State.uaSpecList[this.state.activeUaSpecIdx]\n                  ))\n              }\n            >\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={this.state.isDeleteConfirmationDialogOpen}>\n          <DialogContent>\n            <DialogContentText>\n              {activeUaSpec == null\n                ? ''\n                : `Delete user agent \"${activeUaSpec.name}\"?`}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={() => this.onCancelDelete()}>\n              Cancel\n            </Button>\n            <Button color=\"primary\" onClick={() => this.onConfirmDelete()}>\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={this.state.isResetConfirmationDialogOpen}>\n          <DialogTitle>Reset to default?</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              This will undo any changes you have made to this list, and will\n              remove any custom user agent configurations you have added.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={() => this.onCancelReset()}>\n              Cancel\n            </Button>\n            <Button color=\"primary\" onClick={() => this.onConfirmReset()}>\n              Reset\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Paper>\n    );\n  }\n\n  onMoveUp(idx: number) {\n    if (idx <= 0) {\n      return;\n    }\n    State.moveUaSpecDown(idx - 1);\n  }\n\n  onMoveDown(idx: number) {\n    State.moveUaSpecDown(idx);\n  }\n\n  onEdit(idx: number) {\n    this.setState({\n      activeUaSpecIdx: idx,\n      isEditDialogOpen: true,\n      editedUaSpec: {...State.uaSpecList[idx]},\n    });\n  }\n\n  onCancelEdit() {\n    this.setState({\n      activeUaSpecIdx: -1,\n      isEditDialogOpen: false,\n      editedUaSpec: null,\n    });\n  }\n\n  onConfirmEdit() {\n    if (this.state.editedUaSpec != null) {\n      if (this.hasActiveUaSpec()) {\n        State.updateUaSpec(this.state.activeUaSpecIdx, this.state.editedUaSpec);\n      } else {\n        State.addUaSpec(this.state.editedUaSpec);\n      }\n    }\n    this.setState({\n      activeUaSpecIdx: -1,\n      isEditDialogOpen: false,\n      editedUaSpec: null,\n    });\n  }\n\n  onEditFieldChange(\n    field: string,\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) {\n    this.setState({\n      editedUaSpec: Object.assign({}, this.state.editedUaSpec, {\n        [field]: event.target.value,\n      }),\n    });\n  }\n\n  onDelete(idx: number) {\n    this.setState({\n      activeUaSpecIdx: idx,\n      isDeleteConfirmationDialogOpen: true,\n    });\n  }\n\n  onCancelDelete() {\n    this.setState({\n      activeUaSpecIdx: -1,\n      isDeleteConfirmationDialogOpen: false,\n    });\n  }\n\n  onConfirmDelete() {\n    State.deleteUaSpec(this.state.activeUaSpecIdx);\n    this.setState({\n      activeUaSpecIdx: -1,\n      isDeleteConfirmationDialogOpen: false,\n    });\n  }\n\n  onAdd() {\n    this.setState({\n      activeUaSpecIdx: -1,\n      isEditDialogOpen: true,\n      editedUaSpec: {...NEW_UA_SPEC},\n    });\n  }\n\n  onReset() {\n    this.setState({\n      isResetConfirmationDialogOpen: true,\n    });\n  }\n\n  onCancelReset() {\n    this.setState({\n      isResetConfirmationDialogOpen: false,\n    });\n  }\n\n  onConfirmReset() {\n    State.resetUaSpecListToDefault();\n    this.setState({\n      isResetConfirmationDialogOpen: false,\n    });\n  }\n\n  hasActiveUaSpec() {\n    return (\n      this.state.activeUaSpecIdx >= 0 &&\n      this.state.activeUaSpecIdx < State.uaSpecList.length\n    );\n  }\n}\n\nexport default EditUaListCard;\n","/media/D/Projects/agentium/src/popup/toggle-enabled-card.tsx",[],"/media/D/Projects/agentium/src/popup/ua-list-card.tsx",["93","94"],"import Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport RadioButtonChecked from '@material-ui/icons/RadioButtonChecked';\nimport RadioButtonUnchecked from '@material-ui/icons/RadioButtonUnchecked';\nimport {observer} from 'mobx-react';\nimport * as React from 'react';\nimport CardTitle from 'src/lib/card-title';\nimport DeviceTypeIcon from 'src/lib/device-type-icon';\nimport openOptionsPage from 'src/lib/open-options-page';\nimport State from 'src/state/state';\n\n@observer\nclass UaListCard extends React.Component<{}, {}> {\n  render() {\n    return (\n      <Card>\n        <CardTitle text=\"User agents\" />\n        <List>\n          {State.uaSpecList.map((uaSpec, idx) => (\n            <ListItem\n              key={idx}\n              button={true}\n              dense={true}\n              onClick={() => State.setSelectedUaSpecIdx(idx)}\n              selected={idx == State.selectedUaSpecIdx}\n            >\n              <Radio\n                value={idx}\n                color=\"default\"\n                icon={<RadioButtonUnchecked />}\n                checkedIcon={<RadioButtonChecked />}\n                checked={idx == State.selectedUaSpecIdx}\n              />\n              <ListItemText primary={uaSpec.name} />\n              <ListItemIcon>\n                <DeviceTypeIcon deviceType={uaSpec.deviceType} />\n              </ListItemIcon>\n            </ListItem>\n          ))}\n        </List>\n        <CardActions>\n          <Button color=\"primary\" onClick={openOptionsPage}>\n            Edit user agents\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nexport default UaListCard;\n","/media/D/Projects/agentium/src/state/state.ts",["95","96","97","98","99","100"],"import * as _ from 'lodash';\nimport {\n  action,\n  computed,\n  IObservableArray,\n  observable,\n  reaction,\n  runInAction,\n  toJS,\n  makeObservable,\n} from 'mobx';\nimport UaSpec from 'src/lib/ua-spec';\nimport {browser} from 'webextension-polyfill-ts';\nimport BrowserStorage from './browser-storage';\nimport DEFAULT_UA_SPEC_LIST from './default-ua-spec-list';\n\nconst UA_SPEC_LIST = 'v1/uaSpecList';\nconst SELECTED_UA_SPEC_IDX = 'v1/selectedUaSpecIdx';\nconst IS_ENABLED = 'v1/isEnabled';\nconst STORAGE_KEYS = {\n  sync: [UA_SPEC_LIST, SELECTED_UA_SPEC_IDX],\n  local: [IS_ENABLED],\n};\nconst DEFAULT_UA_SPEC_LIST_STRING = JSON.stringify(DEFAULT_UA_SPEC_LIST);\n\nclass State {\n  @observable\n  public uaSpecList: IObservableArray<UaSpec> = observable([]);\n  @observable\n  public selectedUaSpecIdx = 0;\n  @observable\n  public isEnabled = false;\n\n  @action\n  public toggleEnabled() {\n    if (!this.isEnabled && this.selectedUaSpec == null) {\n      return;\n    }\n    this.isEnabled = !this.isEnabled;\n  }\n\n  @action\n  public setSelectedUaSpecIdx(idx: number) {\n    if (idx >= 0 && idx < this.uaSpecList.length) {\n      this.selectedUaSpecIdx = idx;\n    }\n  }\n\n  @computed\n  public get selectedUaSpec() {\n    if (\n      this.selectedUaSpecIdx < 0 ||\n      this.selectedUaSpecIdx >= this.uaSpecList.length\n    ) {\n      return null;\n    }\n    return this.uaSpecList[this.selectedUaSpecIdx];\n  }\n\n  public isEnabledAndHasValidUaSpec() {\n    return this.isEnabled && this.selectedUaSpec != null;\n  }\n\n  @action\n  public moveUaSpecDown(idx: number) {\n    if (idx < 0 || idx >= this.uaSpecList.length - 1) {\n      return;\n    }\n    this.uaSpecList.splice(\n      idx,\n      2,\n      this.uaSpecList[idx + 1],\n      this.uaSpecList[idx]\n    );\n    if (this.selectedUaSpecIdx == idx) {\n      this.selectedUaSpecIdx = idx + 1;\n    } else if (this.selectedUaSpecIdx == idx + 1) {\n      this.selectedUaSpecIdx = idx;\n    }\n  }\n\n  @action\n  public addUaSpec(uaSpec: UaSpec) {\n    this.uaSpecList.push(uaSpec);\n  }\n\n  @action\n  public deleteUaSpec(idx: number) {\n    if (idx < 0 || idx >= this.uaSpecList.length) {\n      return;\n    }\n    this.uaSpecList.splice(idx, 1);\n    if (this.selectedUaSpecIdx == idx || this.uaSpecList.length == 0) {\n      this.selectedUaSpecIdx = 0;\n      this.isEnabled = false;\n    } else if (this.selectedUaSpecIdx > idx) {\n      --this.selectedUaSpecIdx;\n    }\n  }\n\n  @action\n  public updateUaSpec(idx: number, uaSpec: UaSpec) {\n    if (idx < 0 || idx >= this.uaSpecList.length) {\n      return;\n    }\n    this.uaSpecList.splice(idx, 1, uaSpec);\n  }\n\n  @action\n  public resetUaSpecListToDefault() {\n    this.uaSpecList.replace(DEFAULT_UA_SPEC_LIST);\n    this.selectedUaSpecIdx = 0;\n    this.isEnabled = false;\n  }\n\n  public isUaSpecListSameAsDefault() {\n    return _.isEqual(toJS(this.uaSpecList), DEFAULT_UA_SPEC_LIST);\n  }\n\n  isLoading = false;\n  isStoring = false;\n\n  constructor() {\n    makeObservable(this);\n    (window as {[key: string]: any})['STATE'] = this;\n    this.initialLoad();\n  }\n\n  @action\n  async load() {\n    this.isLoading = true;\n    console.info('LOAD START');\n    let result = Object.assign(\n      {},\n      await BrowserStorage.syncGet([UA_SPEC_LIST, SELECTED_UA_SPEC_IDX]),\n      await BrowserStorage.localGet([IS_ENABLED])\n    );\n    runInAction(() => {\n      if (_.has(result, UA_SPEC_LIST)) {\n        try {\n          this.uaSpecList.replace(JSON.parse(result[UA_SPEC_LIST]));\n        } catch (e) {}\n      }\n      if (this.uaSpecList.length == 0) {\n        this.uaSpecList.replace(DEFAULT_UA_SPEC_LIST);\n      }\n      if (_.has(result, SELECTED_UA_SPEC_IDX)) {\n        this.selectedUaSpecIdx = result[SELECTED_UA_SPEC_IDX];\n      }\n      this.selectedUaSpecIdx = Math.min(\n        Math.max(this.selectedUaSpecIdx, 0),\n        this.uaSpecList.length - 1\n      );\n      if (_.has(result, IS_ENABLED)) {\n        this.isEnabled = result[IS_ENABLED];\n      }\n      if (this.isEnabled && this.selectedUaSpec == null) {\n        this.isEnabled = false;\n      }\n    });\n    console.info('LOAD END');\n    this.isLoading = false;\n  }\n\n  async initialLoad() {\n    await this.load();\n    browser.storage.onChanged.addListener(this.onStorageChanged.bind(this));\n    reaction(\n      () => [toJS(this.uaSpecList), this.selectedUaSpecIdx, this.isEnabled],\n      () => this.onStateChanged()\n    );\n  }\n\n  async store() {\n    this.isStoring = true;\n    console.info('STORE START');\n    let uaSpecListString = JSON.stringify(toJS(this.uaSpecList));\n    await BrowserStorage.syncSet({\n      [UA_SPEC_LIST]:\n        uaSpecListString == DEFAULT_UA_SPEC_LIST_STRING\n          ? '[]'\n          : uaSpecListString,\n      [SELECTED_UA_SPEC_IDX]: this.selectedUaSpecIdx,\n    });\n    await BrowserStorage.localSet({\n      [IS_ENABLED]: this.isEnabled,\n    });\n    console.info('STORE END');\n    this.isStoring = false;\n  }\n\n  onStorageChanged(changes: {[key: string]: any}, area: string) {\n    if (\n      !this.isStoring &&\n      _.intersection(Object.keys(changes), _.get(STORAGE_KEYS, area, []))\n    ) {\n      this.load();\n    }\n  }\n\n  onStateChanged() {\n    if (!this.isLoading) {\n      this.store();\n    }\n  }\n}\n\nexport default new State();\n","/media/D/Projects/agentium/src/lib/open-options-page.ts",["101"],"import {detect} from 'detect-browser';\nimport {browser} from 'webextension-polyfill-ts';\n\nfunction openOptionsPage() {\n  let detectedBrowser = detect();\n  if (detectedBrowser && detectedBrowser.name == 'edge') {\n    let optionsPageUrl = (browser.runtime.getManifest() as {\n      [key: string]: any;\n    })['options_page'];\n    browser.tabs.create({url: optionsPageUrl});\n  } else {\n    browser.runtime.openOptionsPage();\n  }\n}\n\nexport default openOptionsPage;\n","/media/D/Projects/agentium/src/lib/card-title.tsx",[],"/media/D/Projects/agentium/src/lib/device-type-icon.tsx",[],"/media/D/Projects/agentium/src/state/browser-storage.ts",["102"],"import {detect} from 'detect-browser';\nimport * as webextensionPolyfill from 'webextension-polyfill-ts';\n\ndeclare var browser: any;\n\ninterface EdgeStorageArea {\n  get: (keys: Array<string>, cb: (result: {[s: string]: any}) => any) => void;\n  set: (data: {[s: string]: any}, cb: () => void) => void;\n}\n\n/**\n * Polyfill for WebExtensions browser API.\n *\n * Unfortunately, the\n */\nclass BrowserStorage {\n  public localGet(keys: Array<string>) {\n    return this.getFn(this.localStore, keys);\n  }\n\n  public syncGet(keys: Array<string>) {\n    return this.getFn(this.syncStore, keys);\n  }\n\n  public localSet(data: {[s: string]: any}) {\n    return this.setFn(this.localStore, data);\n  }\n\n  public syncSet(data: {[s: string]: any}) {\n    return this.setFn(this.syncStore, data);\n  }\n\n  browserName = '';\n  getFn: (store: any, keys: Array<string>) => Promise<{[key: string]: any}>;\n  setFn: (store: any, data: {[key: string]: any}) => Promise<void>;\n  localStore: any;\n  syncStore: any;\n\n  constructor() {\n    let detectedBrowser = detect();\n    if (detectedBrowser && detectedBrowser.name) {\n      this.browserName = detectedBrowser.name;\n    }\n    if (this.browserName == 'edge') {\n      console.info('Using Edge polyfill for browser storage');\n      this.getFn = this.edgeGet.bind(this);\n      this.setFn = this.edgeSet.bind(this);\n      this.localStore = browser.storage.local;\n      this.syncStore = browser.storage.sync;\n    } else {\n      console.info('Using Chrome / Firefox polyfill for browser storage');\n      this.getFn = this.polyfillGet.bind(this);\n      this.setFn = this.polyfillSet.bind(this);\n      this.localStore = webextensionPolyfill.browser.storage.local;\n      this.syncStore = webextensionPolyfill.browser.storage.sync;\n    }\n  }\n\n  polyfillGet(\n    store: webextensionPolyfill.Storage.StorageArea,\n    keys: Array<string>\n  ) {\n    return store.get(keys);\n  }\n\n  polyfillSet(\n    store: webextensionPolyfill.Storage.StorageArea,\n    data: {[key: string]: any}\n  ) {\n    return store.set(data);\n  }\n\n  edgeGet(store: EdgeStorageArea, keys: Array<string>) {\n    return new Promise<{[key: string]: any}>((resolve) => {\n      store.get(keys, resolve);\n    });\n  }\n\n  edgeSet(store: EdgeStorageArea, data: {[key: string]: any}) {\n    return new Promise<void>((resolve) => {\n      store.set(data, resolve);\n    });\n  }\n}\n\nexport default new BrowserStorage();\n","/media/D/Projects/agentium/src/state/default-ua-spec-list.ts",[],["103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":67,"column":22,"nodeType":"111","messageId":"112","endLine":67,"endColumn":24},{"ruleId":"109","severity":1,"message":"110","line":20,"column":37,"nodeType":"111","messageId":"112","endLine":20,"endColumn":39},{"ruleId":"113","severity":1,"message":"114","line":34,"column":59,"nodeType":"115","endLine":34,"endColumn":74},{"ruleId":"113","severity":1,"message":"114","line":49,"column":47,"nodeType":"115","endLine":49,"endColumn":62},{"ruleId":"113","severity":1,"message":"114","line":55,"column":54,"nodeType":"115","endLine":55,"endColumn":69},{"ruleId":"109","severity":1,"message":"110","line":152,"column":60,"nodeType":"111","messageId":"112","endLine":152,"endColumn":62},{"ruleId":"109","severity":1,"message":"110","line":153,"column":61,"nodeType":"111","messageId":"112","endLine":153,"endColumn":63},{"ruleId":"109","severity":1,"message":"110","line":31,"column":29,"nodeType":"111","messageId":"112","endLine":31,"endColumn":31},{"ruleId":"109","severity":1,"message":"110","line":38,"column":30,"nodeType":"111","messageId":"112","endLine":38,"endColumn":32},{"ruleId":"109","severity":1,"message":"110","line":75,"column":32,"nodeType":"111","messageId":"112","endLine":75,"endColumn":34},{"ruleId":"109","severity":1,"message":"110","line":77,"column":39,"nodeType":"111","messageId":"112","endLine":77,"endColumn":41},{"ruleId":"109","severity":1,"message":"110","line":93,"column":32,"nodeType":"111","messageId":"112","endLine":93,"endColumn":34},{"ruleId":"109","severity":1,"message":"110","line":93,"column":65,"nodeType":"111","messageId":"112","endLine":93,"endColumn":67},{"ruleId":"109","severity":1,"message":"110","line":144,"column":34,"nodeType":"111","messageId":"112","endLine":144,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":180,"column":26,"nodeType":"111","messageId":"112","endLine":180,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":6,"column":47,"nodeType":"111","messageId":"112","endLine":6,"endColumn":49},{"ruleId":"109","severity":1,"message":"110","line":44,"column":26,"nodeType":"111","messageId":"112","endLine":44,"endColumn":28},{"ruleId":"105","replacedBy":"116"},{"ruleId":"107","replacedBy":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["118"],["119"],"no-global-assign","no-unsafe-negation"]